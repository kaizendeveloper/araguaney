;************************************************************************************

;							******** PLANIFICADOR ********

;************************************************************************************

;ESTA PARTE DEL KERNEL SE ENCARGA DE ELEGIR A QUE TAREA SE LE DARA EL CONTROL DEL CPU
;ESTE SE BASA EN PRIORIDADES, OTORGANDOLE MAS OPORTUNIDADES DE OBTENER EL
;CPU A AQUELLAS TAREAS QUE TENGAN MAS PRIORIDAD, ESTE ESTA DIVIDIDO EN TRES PARTES:
;
;	ELECTOR DE PRIORIDAD
;			|---DESPACHADOR
;					|---CAMBIADOR DE CONTEXTOS
;


;INICIALIZACION DEL PLANIFICADOR
	CLRF CONTADOR_LIBRE			;GARANTIZAMOS UN PUNTO DE PARTIDA CONOCIDO

;PRIMERO DEBEMOS SABER A CUAL PRIORIDAD LE TOCA CORRER
PLANIFICADOR
	INCF CONTADOR_LIBRE,W		;INCREMENTAMOS EL VALOR DEL CONTADOR DE CARRERA LIBRE
	MOVWF CONTADOR_LIBRE		;Y HACEMOS UNA COPIA DE DICHO VALOR
	MOVWF CONTADOR_LIBRE_COPIA
	
	CLRF PRIORIDAD_A_CORRER 	;LIMPIAMOS PARA CALCULAR CUAL PRIORIDAD LE TOCARA CORRER PROXIMAMENTE

CALCULO_DE_PRIORIDAD
	MOVLW (MAXIMO_PRIORIDADES+1)
	XORWF PRIORIDAD_A_CORRER,W	; ¿SE HA ROTADO (MAXIMO_PRIORIDADES+1) VECES?
	BTFSC STATUS,Z				
	GOTO PLANIFICADOR			;SI, ENTONCES EL VALOR ES CERO, SE REPITE UN ESTADO INICIAL, COMENZAR DE NUEVO
	RRF CONTADOR_LIBRE,F		;NO, ROTAR A LA DERECHA Y GUARDAR EL RESULTADO EN LA VARIABLE
	INCF PRIORIDAD_A_CORRER		;LLEVAR LA CUENTA DE CUANTAS VECES SE ROTÓ LA VARIABLE
	BTFSS STATUS,C				;¿SE CONSIGUIÓ ALGUN 1 LÓGICO EN EL CARRY AL ROTAR?
	GOTO CALCULO_DE_PRIORIDAD	;NO, REPETIR EL PROCESO DE ROTADO
	MOVF CONTADOR_LIBRE_COPIA,W	;SI, SE ENCONTRO  UNA COINCIDENCIA, DEJAR EL ROTADO
	MOVWF CONTADOR_LIBRE		;RESTAURAR EL VALOR DEL CONTADOR DE CARRERA LIBRE

	;LA PRIORIDAD A CORRER PROXIMAMENTE, ESTA CONTENIDA EN LA VARIABLE PRIORIDAD_A_CORRER


	;INICIALIZACION DEL DESPACHADOR
	CLRF CONTADOR_DE_BLOQUE		;SE VA EMPEZAR A CONTAR CUANTOS BLOQUES DE CONTROL DE TAREA SE HAN ESCANEADO
	
DESPACHADOR
	INCF CONTADOR_DE_BLOQUE		;CUENTA UN ESCANEO DE BLOQUE
	MOVF PUNTERO_DE_SUPERBLOQUE,W	;CARGA EN W EL PUNTERO DE RAM QUE CONTIENE AL BCT A EVALUAR
	XORLW FIN_DIRECCION_P1	;VERIFICAR SI SE LLEGO AL FINAL DEL SUPERBLOQUE
	BTFSS STATUS,Z			;SE LLEGO AL FINAL DEL SUPERBLOQUE?
	GOTO $+3				;NO, POSICIONARSE SOBRE EL BLOQUE DE CONTROL DE ESA TAREA
	MOVLW INICIO_DIRECCION_P1	;SI, COLOCAR EL PUNTERO EN EL INICIO DEL SUPERBLOQUE
	MOVWF PUNTERO_DE_SUPERBLOQUE;LO REGISTRAMOS EN EL PUNTERO DEL SUPERBLOQUE

	MOVF PUNTERO_DE_SUPERBLOQUE,W	;TOMAMOS EL VALOR DEL PUNTERO DE BLOQUE
	MOVWF FSR						;APUNTAMOS A LA PRIORIDAD DE UNA TAREA						
	MOVF INDF,W					;Y LA COMPARAMOS CON LA PRIORIDAD A CORRER
	XORWF PRIORIDAD_A_CORRER,W	;¿ES LA PRIORIDAD A CORRER?
 	BTFSS STATUS,Z
	GOTO $+2 				;NO, BUSCAR EN OTRO BLOQUE
	GOTO CHEQUEAR_ESTADOS	;SI, CHEQUEAR EL ESTADO DE ESA TAREA Y TOMAR LA ACCION PERTINENTE
	MOVLW 4					;SUMAMOS EL TAMAÑO DEL BLOQUE Y ASI
	ADDWF FSR,W				;APUNTAMOS AL SIGUENTE BLOQUE DE CONTROL, PERO LO ALMACENAMOS EN W
	MOVWF PUNTERO_DE_SUPERBLOQUE;PORQUE SE NECESITA GUARDARLO EN EL PUNTERO PARA SU EVALUACION MAS ADELANTE
	MOVF CONTADOR_DE_BLOQUE,W	;¿SE ESCANEO COMPLETAMENTE EL SUPERBLOQUE?
	SUBLW MAXIMO_ESCANEOS		;¿LAS VECES ESCANEADAS SON IGUAL O MAYOR A LOS ESCANOES HECHOS?
	BTFSS STATUS,Z
	GOTO $+2					
	GOTO PLANIFICADOR			;(ES IGUAL) REESTABLECER EL CONTADOR DE BLOQUE YA QUE SE VA A
								;INICIAR EL DESPACHADOR NUEVAMENTE
	BTFSS STATUS,DC
	GOTO PLANIFICADOR			;(ES MAYOR), NO SE ENCONTRO UNA TAREA DE ESA PRIORIDAD, ELEGIR UNA PRIORIDAD NUEVA
	GOTO DESPACHADOR			;(ES MENOR), REESTABLECER EL CONTADOR DE BLOQUE YA QUE SE VA A INICIAR
								; EL DESPACHADOR NUEVAMENTE
			
CHEQUEAR_ESTADOS
	;SE BUSCA CHEQUEAR EN QUE ESTADO LA TAREA QUE COINCIDIO CON LA PRIORIDAD BUSCADA
	;LAS TAREAS EN ESTADO "ELEGIBLE" LE SERAN CEDIDA LA CPU
	;LAS TAREAS EN ESTADO "CORRIENDO" CAMBIARAN SU ESTADO A "ELEGIBLE" Y SE BUSCARA OTRO BCT
	;DE LA MISMA PRIORIDAD Y SERA EVALUADO SU ESTADO

	INCF FSR,F				;APUNTAMOS AL ESTADO DE LA TAREA
	MOVF INDF,W				;Y LA COMPARAMOS CON LA PRIORIDAD A CORRER
	BTFSC STATUS,Z			;ES ELEGIBLE? (SI ES CERO -ELEGIBLE- LA BANDERA Z SE ENCENDERA)
	GOTO EJECUTAR_TAREA		;EJECUTAR DICHA TAREA
	XORLW CORRIENDO			;NO ES ELEGIBLE... ¿YA SE EJECUTÓ?
	BTFSC STATUS,Z			
	GOTO HACER_ELEGIBLE		;SI		
	MOVF INDF,W
	XORLW ESPERANDO_POR_TEMPORIZADOR
	BTFSC STATUS,Z
	GOTO SUSPENDIDA_POR_TEMP
	MOVLW 4					;NO, ESTADO DESCONOCIDO O TAREA EN DEMORA
	ADDWF PUNTERO_DE_SUPERBLOQUE
	GOTO DESPACHADOR		;

EJECUTAR_TAREA
	MOVLW CORRIENDO
	MOVWF INDF				;ESTABLECER EL ESTADO DE ESTA TAREA A (CORRIENDO)
	INCF FSR,W				;APUNTAR AL PC DE ESTA TAREA
	MOVWF PRINCIPIO_TAREA_ANTERIOR;Y SE RESPALDA PARA EL CAMBIO FUTURO DE LA TAREA
	ADDLW 2	
	MOVWF PUNTERO_DE_SUPERBLOQUE	;ESTABLECEMOS EL PUNTERO DE SUPER BLOQUE AL SIGUIENTE BLOQUE
	MOVF PRINCIPIO_TAREA_ANTERIOR,W	;RESTAURAMOS EL PUNTERO DEL PC PAR CAMBIAR CONTEXTO
	GOTO SALTO_COMPUTADO	;EJECUTAR EL CAMBIO DE CONTEXTO
HACER_ELEGIBLE
	;MOVLW ELEGIBLE - COMO VALE CERO DA LO MISMO LIMPIARLO
	;MOVWF INDF
	CLRF INDF					;HACERLO ELEGIBLE
	MOVLW 3
	ADDWF FSR,W
	MOVWF PUNTERO_DE_SUPERBLOQUE		;APUNTAMOS A LA SIGUIENTE TAREA
	GOTO DESPACHADOR
SUSPENDIDA_POR_TEMP
	;LA TAREA ESTA SUSPENDIDA Y ESTA ESPERANDO A QUE SE LIBERE UN TEMPORIZADOR
	;EN CASO DE QUE HAYA UNO LIBRE SE LE PERMITIRA CORRER, RESUMIENDO LA EJECUCCION ANTES DEL PUNTO
	;DE LLAMADA AL TEMP

	MOVF FSR,W
	MOVWF FSR_TEMPORAL		;RESPALDAR FSR TEMPORALMENTE
	BANKSEL B_TEMPORIZADOR	;SELECCIONAR BANCO 1
	BCF B_TEMPORIZADOR,TIPO_BUSQUEDA_TEMPORIZADOR;ESTABLECER BUSQUEDA DE TEMP. LIBRE
	BCF B_TEMPORIZADOR,TIPO_TEMPORIZADOR	;BAJO BUSQUEDA NORMAL
	CALL BUSCAR_TEMPORIZADOR
	MOVF FSR_TEMPORAL,W		;RESTAURAMOS EL FSR, YA QUE APUNTA A UNA POSICION X EN EL BANCO 1
	MOVWF FSR
	BTFSS B_TEMPORIZADOR,TEMPORIZADOR_ENCONTRADO;CHEQUEAR SI SE CONSIGUIO UN TEMPORIZADOR LIBRE
	GOTO SPT_SEGUIR_DESPACHANDO	;NO, SEGUIR DESPACHANDO OTRAS TAREAS
	BANKSEL PUNTERO_DE_SUPERBLOQUE ;SI, DESPACHAR ESTA TAREA
	GOTO EJECUTAR_TAREA
SPT_SEGUIR_DESPACHANDO
	BANKSEL PUNTERO_DE_SUPERBLOQUE
	MOVLW .4
	ADDWF PUNTERO_DE_SUPERBLOQUE
	GOTO DESPACHADOR
	
	
	
	
				
	


	


;************************************************************************************

;				*********	CAMBIADOR DE CONTEXTOS **********

;************************************************************************************
;ES EL MECANISMO DEL KERNEL ENCARGADO DE ENTREGAR EL CPU A LA TAREA QUE EL
;PLANIFICADOR LE ORDENE


SALTO_COMPUTADO
				;SECCION CRITICA
	MOVWF FSR				;USAR EL DIRECCIONAMIENTO INDIRECTO
	MOVF INDF,W				;GUARDAMOS EN W (PCH)
	MOVWF PCLATH			;PARA ENVIAR ESE VALOR AL PCLATH
	INCF FSR				;APUNTAMOS A LA PARTE BAJA (PCL)
	MOVF INDF,W				;EJECUTAR EL SALTO COMPUTADO
	MOVWF PCL

; **************************   FIN DE SECCION PLANIFICADOR **************************
	
